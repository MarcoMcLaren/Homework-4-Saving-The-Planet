@model IEnumerable<HW4._2.Models.Plastic>

@{
    ViewBag.Title = "Plastic";
}

<h2>Plastic</h2>
<table class="table" id="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Weight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RecycleMonth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AmountOfBottles)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecycleMonth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AmountOfBottles)
            </td>
            <td>
                <input type="button" class="btn btn-success" value="Update" onclick="location.href='@Url.Action("Index", "Update")'" />
                <input type="button" class="btn btn-danger" value="Delete" onclick="location.href='@Url.Action("DeletePlastic", "Delete", new {id = item.ID})'" />
            </td>
        </tr>
    }

</table>
<br />
<div class="row">
    <div class="col-md-6">
        <div class="well">
            <div>
                <canvas id="myChart"></canvas>
            </div>

        </div>
    </div>
    <div class="col-md-6">
        <div class="well">

            <div>
                <canvas id="myChartTwo"></canvas>
            </div>
        </div>
    </div>
</div>
<!--Canvas for the chart-->
<!--Kode vir die eerste chart, die een wat die totale gewig wys-->
<script>
    const labels = [
        '',
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'

    ];
    const arr = [];
    const arrTwo = [];

    var rowCount = document.getElementById('table').rows.length;

    //jquery code bewlow is to get all the values in a column
    $(document).ready(function () {
        $("#table tr").each(function () {
            arr.push($(this).find("td:nth-child(2)").text()); //put elements into array
        });
    });
    console.log(arr);
    var data = {
        labels: labels,
        datasets: [{
            label: 'WEIGHT SUMMARY (KG)',
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: arr
        }]
    };

    const config = {
        type: 'bar',
        data: data,
        options: {}
    };

    const myChart = new Chart(
        document.getElementById('myChart'),
        config
    );


    ////////////////////
    $(document).ready(function () {
        $("#table tr").each(function () {
            arrTwo.push($(this).find("td:nth-child(4)").text()); //put elements into array
        });
    });
    var dataTwo = {
        labels: labels,
        datasets: [{
            label: 'Amount of Bottles Collected',
            backgroundColor: 'rgb(64, 67, 255)',
            borderColor: 'rgb(64, 67, 255)',
            data: arrTwo,
            tension: 0.5
        }]
    };
    const configTwo = {
        type: 'line',
        data: dataTwo,
        options: {}
    };
    console.log(arrTwo);
    const myChartTwo = new Chart(
        document.getElementById('myChartTwo'),
        configTwo
    );
    /////////////////////////////////////////////////////////////////////Automatically reload the page 
    function fireEvent(element, event) {
        if (document.createEventObject) {
            // dispatch for IE
            var evt = document.createEventObject();
            return element.fireEvent('on' + event, evt)
        }
        else {
            // dispatch for firefox + others
            var evt = document.createEvent("HTMLEvents");
            evt.initEvent(event, true, true); // event type,bubbling,cancelable
            return !element.dispatchEvent(evt);
        }
    }

    setTimeout(function () {

        var links = document.getElementsByTagName("link");
        var st = [];
        for (var x = 0; x < links.length; x++)
            if (links[x].getAttribute("rel") == "stylesheet") {
                st.push(links[x]);
                links[x].wasAtt = links[x].getAttribute("href");
                links[x].setAttribute("href", "");
            }
        setTimeout(function () {
            for (var x = 0; x < st.length; x++)
                st[x].setAttribute("href", st[x].wasAtt);
            setTimeout(function () {
                fireEvent(window, "load");
            }, 0);
        }, 0);
    }, 0); // test reload after five seconds
</script>
